{"version":3,"sources":["components/Home.jsx","constants/actionTypes/auth.js","actions/auth.js","containers/Home.jsx","pages/Home.jsx","components/Login.jsx","constants/index.js","api/auth.js","api/index.js","constants/actionTypes/common.js","actions/common.js","containers/Login.jsx","pages/Login.jsx","components/Signup.jsx","containers/Signup.jsx","pages/Signup.jsx","components/Preloader.jsx","containers/Preloader.jsx","components/Toast.jsx","containers/Toast.jsx","helpers/ProtectedRoute.jsx","helpers/NonProtectedRoute.jsx","App.jsx","reducers/auth.js","reducers/common.js","reducers/index.js","reportWebVitals.js","index.js"],"names":["Home","user","logout","email","token","substring","onClick","AUTH_LOGIN","AUTH_LOGOUT","login","type","navigate","useNavigate","auth","useSelector","state","dispatch","useDispatch","currentUser","localStorage","removeItem","schema","yup","shape","required","password","min","Login","setEmail","setPassword","onLogin","Container","Row","Col","xs","sm","md","lg","validationSchema","onSubmit","e","initialValues","handleSubmit","handleChange","handleBlur","values","touched","errors","Form","noValidate","className","Label","htmlFor","InputGroup","FormControl","name","value","onChange","target","isInvalid","onBlur","Control","Feedback","Button","variant","to","API_URL","authHeader","headers","getItem","api","axios","post","register","me","get","START_ACTION","END_ACTION","SHOW_TOAST","HIDE_TOAST","startAction","endAction","showToast","title","content","useState","a","agent","res","setItem","data","response","status","error","passconf","oneOf","Signup","setPassconf","onSignup","Preloader","style","position","top","left","width","height","backgroundColor","opacity","zIndex","Spinner","animation","PreloaderContainer","common","loading","MyToast","hideToast","Toast","onClose","delay","autohide","Header","src","alt","Body","ToastContainer","msgTitle","msgContent","ProtectedRoute","props","useEffect","getAuthInfo","Fragment","children","NonProtectedRoute","setToken","App","path","element","INITIAL_STATE","reducer","action","rootReducer","combineReducers","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","applyMiddleware","reduxThunk","createStore","createStoreWithMiddleware","reducers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e097a17.chunk.js","sourcesContent":["const Home = ({ user, logout }) => {\r\n  return <div>\r\n    Email:{user.email}<br />\r\n    Token:{user.token.substring(1, 50)}<br />\r\n    <button onClick={() => logout()}>Log out</button>\r\n  </div>\r\n}\r\n\r\nexport default Home","export const AUTH_LOGIN = 'AUTH_LOGIN'\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'","import {\r\n  AUTH_LOGIN,\r\n  AUTH_LOGOUT\r\n} from '../constants/actionTypes/auth'\r\n\r\nexport const login = user => ({ type: AUTH_LOGIN, user })\r\n\r\nexport const logout = () => ({ type: AUTH_LOGOUT })","import { useNavigate } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport HomeComponent from '../components/Home'\r\n\r\nimport { logout } from '../actions/auth'\r\n\r\nconst Home = () => {\r\n  const navigate = useNavigate()\r\n  const auth = useSelector(state => state.auth)\r\n  const dispatch = useDispatch()\r\n  const logOut = () => {\r\n    localStorage.removeItem('token')\r\n    dispatch(logout())\r\n    navigate('/login')\r\n  }\r\n  return <HomeComponent user={auth.currentUser} logout={logOut} />\r\n}\r\n\r\nexport default Home","import HomeContainer from '../containers/Home'\r\n\r\nconst Home = () => <HomeContainer />\r\n\r\nexport default Home","import {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  InputGroup,\r\n  FormControl,\r\n  Button\r\n} from 'react-bootstrap'\r\nimport {\r\n  Link\r\n} from 'react-router-dom'\r\nimport * as yup from 'yup'\r\nimport { Formik } from 'formik'\r\n\r\nconst schema = yup.object().shape({\r\n  email: yup.string()\r\n    .email('Invalid email address')\r\n    .required('Please input email address'),\r\n  password: yup.string()\r\n    .min(5, 'Must be more than 5 characters')\r\n    .required('Please input password')\r\n});\r\n\r\nconst Login = ({ email, password, setEmail, setPassword, onLogin }) => {\r\n  return <Container>\r\n    <Row>\r\n      <Col xs={0} sm={2} md={3} lg={4} />\r\n      <Col xs={12} sm={8} md={6} lg={4}>\r\n        <Formik\r\n          validationSchema={schema}\r\n          onSubmit={e => onLogin()}\r\n          initialValues={{\r\n            email: email,\r\n            password: password\r\n          }}\r\n        >\r\n          {({\r\n            handleSubmit,\r\n            handleChange,\r\n            handleBlur,\r\n            values,\r\n            touched,\r\n            errors,\r\n          }) => (\r\n            <Form noValidate onSubmit={handleSubmit}>\r\n              <h1 className='text-center'>Log In</h1>\r\n              <Form.Label htmlFor='basic-url'>Email</Form.Label>\r\n              <InputGroup className='mb-3'>\r\n                <FormControl name='email' value={values.email} onChange={e => {\r\n                  handleChange(e)\r\n                  setEmail(e.target.value)\r\n                }} isInvalid={!!touched && !!errors.email} onBlur={handleBlur} />\r\n                <Form.Control.Feedback type='invalid'>\r\n                  {errors.email}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n              <Form.Label htmlFor='basic-url'>Password</Form.Label>\r\n              <InputGroup className='mb-3'>\r\n                <FormControl type='password' name='password' value={values.password} onChange={e => {\r\n                  handleChange(e)\r\n                  setPassword(e.target.value)\r\n                }} isInvalid={touched.password && !!errors.password} onBlur={handleBlur} />\r\n                <Form.Control.Feedback type='invalid'>\r\n                  {errors.password}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n              <div className='d-grid gap-2 mb-3'>\r\n                <Button variant='primary' type='submit'>\r\n                  Log In\r\n                </Button>\r\n              </div>\r\n              <div className='text-center'>\r\n                Don't you have an account? &nbsp;\r\n                <Link to='/signup'>Create account</Link>\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Col>\r\n    </Row>\r\n  </Container >\r\n}\r\n\r\nexport default Login","export const API_URL = 'http://localhost:5000/api'","import axios from 'axios'\r\n\r\nimport { API_URL } from '../constants/'\r\n\r\nconst authHeader = {\r\n  headers: {\r\n    'Authorization': localStorage.getItem('token')\r\n  }\r\n}\r\n\r\nconst authApi = {\r\n  login: (email, password) => axios.post(`${API_URL}/auth/login`, {\r\n    email,\r\n    password\r\n  }),\r\n  register: (email, password) => axios.post(`${API_URL}/auth/register`, {\r\n    email,\r\n    password\r\n  }),\r\n  me: () => axios.get(`${API_URL}/auth/me`, authHeader)\r\n}\r\n\r\nexport default authApi","import auth from './auth'\r\n\r\nconst api = {\r\n  auth\r\n}\r\n\r\nexport default api","export const START_ACTION = 'START_ACTION'\r\nexport const END_ACTION = 'END_ACTION'\r\nexport const SHOW_TOAST = 'SHOW_TOAST'\r\nexport const HIDE_TOAST = 'HIDE_TOAST'","import {\r\n  START_ACTION,\r\n  END_ACTION,\r\n  SHOW_TOAST,\r\n  HIDE_TOAST\r\n} from '../constants/actionTypes/common'\r\n\r\nexport const startAction = () => ({ type: START_ACTION })\r\n\r\nexport const endAction = () => ({ type: END_ACTION })\r\n\r\nexport const showToast = (title, content) => ({ type: SHOW_TOAST, title, content })\r\n\r\nexport const hideToast = () => ({ type: HIDE_TOAST })","import { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport LoginComponent from '../components/Login'\r\n\r\nimport agent from '../api/'\r\n\r\nimport {\r\n  startAction,\r\n  endAction,\r\n  showToast\r\n} from '../actions/common'\r\n\r\nimport { login } from '../actions/auth'\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate()\r\n  const dispatch = useDispatch()\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const onLogin = async () => {\r\n    dispatch(startAction())\r\n    try {\r\n      const res = await agent.auth.login(email, password)\r\n      dispatch(endAction())\r\n      localStorage.setItem('token', res.data.token)\r\n      dispatch(showToast('Login Success', 'Welcome'))\r\n      dispatch(login(res.data))\r\n      navigate('/')\r\n    } catch (error) {\r\n      if (error.response.status === 401) {\r\n        dispatch(endAction())\r\n        dispatch(showToast('Login Failed', error.response.data.error))\r\n      }\r\n    }\r\n  }\r\n  return <LoginComponent email={email} password={password} setEmail={setEmail} setPassword={setPassword} onLogin={onLogin} />\r\n}\r\n\r\nexport default Login","import LoginContainer from '../containers/Login'\r\n\r\nconst Login = () => <LoginContainer />\r\n\r\nexport default Login","import {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  InputGroup,\r\n  FormControl,\r\n  Button\r\n} from 'react-bootstrap'\r\nimport {\r\n  Link\r\n} from 'react-router-dom'\r\nimport * as yup from 'yup'\r\nimport { Formik } from 'formik'\r\n\r\nconst schema = yup.object().shape({\r\n  email: yup.string()\r\n    .email('Invalid email address')\r\n    .required('Please input email address'),\r\n  password: yup.string()\r\n    .min(5, 'Must be more than 5 characters')\r\n    .required('Please input password'),\r\n  passconf: yup.string().required('Please input confirm password').oneOf([yup.ref('password')], 'Confirm Password should be the same as password')\r\n});\r\n\r\nconst Signup = ({ email, password, passconf, setEmail, setPassword, setPassconf, onSignup }) => {\r\n  return <Container>\r\n    <Row>\r\n      <Col xs={0} sm={2} md={3} lg={4} />\r\n      <Col xs={12} sm={8} md={6} lg={4}>\r\n        <Formik\r\n          validationSchema={schema}\r\n          onSubmit={e => onSignup()}\r\n          initialValues={{\r\n            email: email,\r\n            password: password,\r\n            passconf: passconf,\r\n          }}\r\n        >\r\n          {({\r\n            handleSubmit,\r\n            handleChange,\r\n            handleBlur,\r\n            values,\r\n            touched,\r\n            errors,\r\n          }) => (\r\n            <Form noValidate onSubmit={handleSubmit}>\r\n              <h1 className='text-center'>Sign Up</h1>\r\n              <Form.Label htmlFor='basic-url'>Email</Form.Label>\r\n              <InputGroup className='mb-3'>\r\n                <FormControl name='email' value={values.email} onChange={e => {\r\n                  handleChange(e)\r\n                  setEmail(e.target.value)\r\n                }} isInvalid={!!touched && !!errors.email} onBlur={handleBlur} />\r\n                <Form.Control.Feedback type='invalid'>\r\n                  {errors.email}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n              <Form.Label htmlFor='basic-url'>Password</Form.Label>\r\n              <InputGroup className='mb-3'>\r\n                <FormControl type='password' name='password' value={values.password} onChange={e => {\r\n                  handleChange(e)\r\n                  setPassword(e.target.value)\r\n                }} isInvalid={touched.password && !!errors.password} onBlur={handleBlur} />\r\n                <Form.Control.Feedback type='invalid'>\r\n                  {errors.password}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n              <Form.Label htmlFor='basic-url'>Confirm Password</Form.Label>\r\n              <InputGroup className='mb-3'>\r\n                <FormControl type='password' name='passconf' value={values.passconf} onChange={e => {\r\n                  handleChange(e)\r\n                  setPassconf(e.target.value)\r\n                }} isInvalid={touched.passconf && !!errors.passconf} onBlur={handleBlur} />\r\n                <Form.Control.Feedback type='invalid'>\r\n                  {errors.passconf}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n              <div className='d-grid gap-2 mb-3'>\r\n                <Button type='submit' variant='primary'>\r\n                  Sign Up\r\n                </Button>\r\n              </div>\r\n              <div className='text-center'>\r\n                Already have an account?&nbsp;\r\n                <Link to='/login'>Log In</Link>\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Col>\r\n    </Row>\r\n  </Container >\r\n}\r\n\r\nexport default Signup","import { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport SignupComponent from '../components/Signup'\r\n\r\nimport agent from '../api/'\r\n\r\nimport {\r\n  startAction,\r\n  endAction,\r\n  showToast\r\n} from '../actions/common'\r\n\r\nconst Signup = () => {\r\n  const navigate = useNavigate()\r\n  const dispatch = useDispatch()\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [passconf, setPassconf] = useState('')\r\n  const onSignup = async () => {\r\n    dispatch(startAction())\r\n    try {\r\n      await agent.auth.register(email, password)\r\n      dispatch(endAction())\r\n      dispatch(showToast('Signup Success', 'Welcome'))\r\n      navigate('/login')\r\n    } catch (error) {\r\n      if (error.response.status === 401) {\r\n        dispatch(endAction())\r\n        dispatch(showToast('Signup Failed', error.response.data.error))\r\n      }\r\n    }\r\n  }\r\n  return <SignupComponent\r\n    email={email}\r\n    password={password}\r\n    passconf={passconf}\r\n    setEmail={setEmail}\r\n    setPassword={setPassword}\r\n    setPassconf={setPassconf}\r\n    onSignup={onSignup}\r\n  />\r\n}\r\n\r\nexport default Signup","import SignupContainer from '../containers/Signup'\r\n\r\nconst Signup = () => <SignupContainer />\r\n\r\nexport default Signup","import {\r\n  Spinner\r\n} from 'react-bootstrap'\r\n\r\nconst Preloader = () => <div style={{ position: 'absolute', top: '0px', left: '0px', width: '100%', height: '100%', backgroundColor: '#ffffff', opacity: '0.5', zIndex: '10000' }}>\r\n  <Spinner\r\n    animation='border'\r\n    variant='primary'\r\n    style={{\r\n      width: '50px',\r\n      height: '50px',\r\n      position: 'fixed',\r\n      top: 'calc(50% - 50px)',\r\n      left: 'calc(50% - 50px)'\r\n    }}\r\n  />\r\n</div>\r\n\r\nexport default Preloader","import { useSelector } from 'react-redux'\r\n\r\nimport Preloader from '../components/Preloader'\r\n\r\nconst PreloaderContainer = () => {\r\n  const common = useSelector(state => state.common);\r\n  return common.loading && <Preloader />\r\n}\r\n\r\nexport default PreloaderContainer","import {\r\n  ToastContainer,\r\n  Toast\r\n} from 'react-bootstrap'\r\n\r\nconst MyToast = ({ title, content, hideToast }) =>\r\n  <ToastContainer position='top-end' className='p-3'>\r\n    <Toast onClose={() => hideToast()} delay={3000} autohide>\r\n      <Toast.Header>\r\n        <img src='holder.js/20x20?text=%20' className='rounded me-2' alt='' />\r\n        <strong className='me-auto'>{title}</strong>\r\n        <small className='text-muted'>just now</small>\r\n      </Toast.Header>\r\n      <Toast.Body>{content}</Toast.Body>\r\n    </Toast>\r\n  </ToastContainer>\r\n\r\nexport default MyToast","import { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { hideToast } from '../actions/common'\r\n\r\nimport Toast from '../components/Toast'\r\n\r\nconst ToastContainer = () => {\r\n  const common = useSelector((state) => state.common)\r\n  const dispatch = useDispatch()\r\n  const {\r\n    showToast,\r\n    msgTitle,\r\n    msgContent\r\n  } = common\r\n  const hide = () => {\r\n    dispatch(hideToast())\r\n  }\r\n  return showToast ? <Toast title={msgTitle} content={msgContent} hideToast={hide} /> : ''\r\n}\r\n\r\nexport default ToastContainer","import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Navigate } from 'react-router'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport Preloader from '../components/Preloader'\r\n\r\nimport agent from '../api/'\r\n\r\nimport { login } from '../actions/auth'\r\n\r\nconst ProtectedRoute = props => {\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n  const token = localStorage.getItem('token')\r\n  const auth = useSelector(state => state.auth)\r\n  useEffect(() => {\r\n    async function getAuthInfo() {\r\n      if (!auth.currentUser.email) {\r\n        try {\r\n          const res = await agent.auth.me()\r\n          dispatch(login(res.data))\r\n        } catch (error) {\r\n          if (error.response.status === 401) {\r\n            localStorage.removeItem('token')\r\n            navigate('/login')\r\n          }\r\n        }\r\n      }\r\n    }\r\n    getAuthInfo()\r\n  }, [])\r\n  if (auth.currentUser.email) {\r\n    return <React.Fragment>{props.children}</React.Fragment>\r\n  }\r\n  if (!token) {\r\n    return <Navigate to='/login' />\r\n  }\r\n  return <Preloader />\r\n}\r\n\r\nexport default ProtectedRoute","import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Navigate } from 'react-router'\r\n\r\nimport Preloader from '../components/Preloader'\r\n\r\nimport agent from '../api/'\r\n\r\nimport { login } from '../actions/auth'\r\n\r\nconst NonProtectedRoute = props => {\r\n  const dispatch = useDispatch()\r\n  const [token, setToken] = useState(localStorage.getItem('token'))\r\n  const auth = useSelector(state => state.auth)\r\n  useEffect(() => {\r\n    async function getAuthInfo() {\r\n      if (!auth.currentUser.email) {\r\n        try {\r\n          const res = await agent.auth.me()\r\n          dispatch(login(res.data))\r\n        } catch (error) {\r\n          if (error.response.status === 401) {\r\n            localStorage.removeItem('token')\r\n            setToken('')\r\n          }\r\n        }\r\n      }\r\n    }\r\n    getAuthInfo()\r\n  }, [])\r\n  if (auth.currentUser.email) {\r\n    return <Navigate to='/' />\r\n  }\r\n  if (!token) {\r\n    return <React.Fragment>{props.children}</React.Fragment>\r\n  }\r\n  return <Preloader />\r\n}\r\n\r\nexport default NonProtectedRoute","import React from 'react'\nimport {\n  Routes,\n  Route\n} from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\n\nimport Home from './pages/Home'\nimport Login from './pages/Login'\nimport Signup from './pages/Signup'\n\nimport Preloader from './containers/Preloader'\nimport Toast from './containers/Toast'\n\nimport ProtectedRoute from './helpers/ProtectedRoute'\nimport NonProtectedRoute from './helpers/NonProtectedRoute'\n\nimport './App.css'\n\nfunction App() {\n  return (\n    <Container className='App'>\n      <Routes>\n        <Route path='/' element={<React.Fragment><ProtectedRoute><Home /></ProtectedRoute></React.Fragment>} />\n        <Route path='/login' element={<React.Fragment><NonProtectedRoute><Login /></NonProtectedRoute></React.Fragment>} />\n        <Route path='/signup' element={<React.Fragment><NonProtectedRoute><Signup /></NonProtectedRoute></React.Fragment>} />\n      </Routes>\n      <Preloader />\n      <Toast />\n    </Container>\n  )\n}\n\nexport default App\n","import {\r\n  AUTH_LOGIN,\r\n  AUTH_LOGOUT\r\n} from '../constants/actionTypes/auth'\r\n\r\nconst INITIAL_STATE = {\r\n  currentUser: {\r\n    email: '',\r\n    token: ''\r\n  }\r\n}\r\n\r\nconst reducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case AUTH_LOGIN:\r\n      return {\r\n        ...state,\r\n        currentUser: action.user\r\n      }\r\n    case AUTH_LOGOUT:\r\n      return {\r\n        ...state,\r\n        currentUser: {\r\n          email: '',\r\n          token: ''\r\n        }\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer","import {\r\n  START_ACTION,\r\n  END_ACTION,\r\n  SHOW_TOAST,\r\n  HIDE_TOAST\r\n} from '../constants/actionTypes/common'\r\n\r\nconst INITIAL_STATE = {\r\n  loading: false,\r\n  showToast: false,\r\n  msgTitle: '',\r\n  msgContent: ''\r\n}\r\n\r\nconst reducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case START_ACTION:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case END_ACTION:\r\n      return {\r\n        ...state,\r\n        loading: false\r\n      }\r\n    case SHOW_TOAST:\r\n      return {\r\n        ...state,\r\n        showToast: true,\r\n        msgTitle: action.title,\r\n        msgContent: action.content\r\n      }\r\n    case HIDE_TOAST:\r\n      return {\r\n        ...state,\r\n        showToast: false\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer","import { combineReducers } from 'redux'\r\n\r\nimport auth from './auth'\r\nimport common from './common'\r\n\r\nconst rootReducer = combineReducers({\r\n  auth,\r\n  common\r\n})\r\n\r\nexport default rootReducer\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport reduxThunk from 'redux-thunk'\nimport {\n  BrowserRouter\n} from 'react-router-dom'\n\nimport './index.css'\nimport App from './App.jsx'\nimport reducers from './reducers/index';\nimport reportWebVitals from './reportWebVitals'\n\nconst createStoreWithMiddleware = applyMiddleware(reduxThunk)(createStore);\nconst store = createStoreWithMiddleware(reducers);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}